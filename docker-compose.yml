
version: '3.3'

services: 
  
  users:
    build:
      context: ./services/users
      dockerfile: Dockerfile.users
    volumes:
      - './services/users:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports: 
      - '5700:5700'
    depends_on:
      - mongo
    restart: unless-stopped

  menus:
    build:
      context: ./services/menus
      dockerfile: Dockerfile.menus
    ports:
      - '6000:6000'
    environment:
      - NODE_ENV=development
    volumes:
      - './services/menus:/usr/src/app'
      - '/usr/src/app/node_modules'
    depends_on:
      - mongo
    restart: unless-stopped
  
  orders:
    build:
      context: ./services/orders
      dockerfile: Dockerfile.orders
    ports:
      - '6700:6700'
    environment:
      - NODE_ENV=development
    volumes:
      - './services/orders:/usr/src/app'
      - '/usr/src/app/node_modules'
    depends_on:
      - mongo
    restart: unless-stopped
      
  mongo:
    container_name: mongo
    image: mongo
    command: mongod --port 27019
    environment:
      - MONGO_INITDB_ROOT_USERNAME=naomis-cuisine
      - MONGO_INITDB_ROOT_PASSWORD=7vXm6C3DJHGKSc9cqNwkjC54W
    ports:
      - '27019:27019'
    volumes:
      - cuisine_volume:/var/lib/db/data
    restart: unless-stopped

  frontend_content:
    build:
      context: ./services/frontend_content
      dockerfile: Dockerfile.frontend
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=development
    volumes:
      - './services/frontend_content:/usr/src/app'
      - '/usr/src/app/node_modules'
    depends_on:
      - mongo
    restart: unless-stopped
  
  client:
    build:
      context: ./services/client
      dockerfile: Dockerfile.client
      args:
        app_env: 'development'
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    volumes:
      - './services/client/cuisine_client:/usr/src/app'
      - '/usr/src/app/node_modules'
    depends_on:
      - mongo
      - frontend_content
    restart: unless-stopped

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile.nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./services/nginx/certs/:/etc/nginx/certs/
    command: [nginx-debug, '-g', 'daemon off;']
    depends_on:
      - client
      - users

volumes:
  cuisine_volume:

